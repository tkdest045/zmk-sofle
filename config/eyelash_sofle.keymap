#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4     &kp N5    &mmv MOVE_UP     &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R      &kp T     &mmv MOVE_DOWN   &kp Y   &kp U      &kp I      &kp O    &kp P     &kp BACKSLASH
&kp CAPS    &kp A      &kp S         &kp D         &kp F      &kp G     &mmv MOVE_LEFT   &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V      &kp B     &mmv MOVE_RIGHT  &kp N   &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE  &mo 0     &mkp LCLK        &mo 1   &kp ENTER  &mo 3      &none    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F1            &kp F2        &kp F3        &kp F4        &kp F5        &kp F6           &mmv MOVE_UP     &kp F7        &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5           &mmv MOVE_DOWN   &kp NUMBER_6  &kp N7  &kp N8  &kp N9   &kp N0   &kp DELETE
&kp CAPSLOCK      &none         &none         &none         &none         &none            &mmv MOVE_LEFT   &none         &none   &none   &none    &none    &none
&kp LEFT_CONTROL  &none         &none         &none         &none         &none            &mmv MOVE_RIGHT  &none         &none   &none   &none    &none    &none
&none             &none         &none         &trans        &trans        &kp LG(SPACE)    &mkp RCLK        &trans        &trans  &trans  &none    &none
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "layer2";
            bindings = <
&kp F1         &kp F2           &kp F3       &kp F4     &kp F5      &kp F6          &mmv MOVE_UP     &kp F7         &kp F8          &kp F9        &kp F10               &kp F11                &kp F12
&kp TILDE      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT     &mmv MOVE_DOWN   &kp LCTRL      &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DELETE
&none          &none            &kp HOME     &kp UP     &kp END     &none           &mmv MOVE_LEFT   &none          &kp MINUS       &kp EQUAL     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&kp LG(TILDE)  &kp LEFT_SHIFT   &kp LEFT     &kp DOWN   &kp RIGHT   &kp LEFT_ALT    &mmv MOVE_RIGHT  &none          &kp UNDERSCORE  &kp PLUS      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE
&none          &none            &none        &kp PG_UP  &kp PG_DN   &trans          &mkp RCLK        &kp LG(SPACE)  &trans          &trans        &none                 &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &out OUT_USB    &trans     &none  &none         &none     &none     &none      &kp K_LOCK
&none                 &none                 &none         &none         &none         &none           &trans     &none  &none         &none     &none     &none      &none
&none                 &none                 &none         &none         &none         &none           &trans     &none  &none         &kp HOME  &kp UP    &kp END    &none
&kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &none         &none         &none         &none           &trans     &none  &kp LEFT_ALT  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&none                 &kp LS(N5)            &none         &none         &none         &none           &mkp RCLK  &none  &none         &trans    &none     &none
            >;
        };
    };
};
